% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_array_coords.R
\name{add_array_coords}
\alias{add_array_coords}
\title{Add transformed array and pixel coordinates to a \code{SpatialExperiment}}
\usage{
add_array_coords(spe, sample_info, coords_dir, overwrite = TRUE)
}
\arguments{
\item{spe}{A \code{SpatialExperiment}}

\item{sample_info}{A \code{tibble} with columns \code{capture_area} and
\code{group}}

\item{coords_dir}{A \code{character(1)} vector giving the directory
containing sample directories each with \code{tissue_positions.csv},
\code{scalefactors_json.json}, and \code{tissue_lowres_image.png} files
produced from refinement with \code{prep_imagej_*()} functions}

\item{overwrite}{A \code{logical(1)} vector indicating whether to overwrite
\code{spatialCoords(spe)}, and \code{colData(spe)} columns \code{array_row},
\code{array_col}, \code{pixel_row_in_fullres}, and
\code{pixel_col_in_fullres} with the transformed values. Note that the
original values are preserved even when TRUE, in versions of
\code{colData(spe)} columns ending in \code{_original}.}
}
\value{
A \code{SpatialExperiment} object with additional \code{colData}
columns \code{pxl_row_in_fullres_[suffix]} and \code{pxl_col_in_fullres_[suffix]}
with \code{[suffix]} values \code{original}, \code{transformed}, and
\code{rounded}; \code{array_row_[suffix]} and \code{array_col_[suffix]}
columns with \code{[suffix]} values \code{original} and \code{transformed}; and,
if \code{overwrite}, modified colData columns \code{array_row} and
\code{array_col} and \code{spatialCoords()} with their transformed values
}
\description{
Given a \code{SpatialExperiment}, sample information, and coordinates
produced from the refinement workflow, add array and pixel coordinates
appropriate for the linearly transformed capture areas making up each group
present in the \code{SpatialExperiment}.
}
\details{
Array coordinates are determined via an algorithm that fits each spot to
the nearest spot on a new, imaginary, Visium-like capture area. The imaginary
capture area differs from a real capture area only in its extent; array
coordinates still start at 0 but may extend arbitrarily beyond the normal
maximum indices of 77 and 127 to fit every capture area in each group
defined in the \code{SpatialExperiment}. The goal is to return well-defined
array coordinates in a consistent spatial orientation for each group, such
that downstream applications, such as clustering with BayesSpace, can
process each group as if it really were one capture area in the first place.
}
\examples{
spe <- spatialLIBD::fetch_data(type = "visiumStitched_brain_spe")

########################################################################
#   Prepare sample_info
########################################################################

sample_info = dplyr::tibble(
    group = "Br2719",
    capture_area = c("V13B23-283_A1", "V13B23-283_C1", "V13B23-283_D1")
)
#   Add 'spaceranger_dir' column
sr_dir = tempdir()
temp = unzip(
    spatialLIBD::fetch_data("visiumStitched_brain_spaceranger"), exdir = sr_dir
)
sample_info$spaceranger_dir = file.path(
    sr_dir, sample_info$capture_area, 'outs', 'spatial'
)

#   Add ImageJ-output-related columns
imagej_dir = tempdir()
temp = unzip(
    spatialLIBD::fetch_data("visiumStitched_brain_ImageJ_out"), exdir = imagej_dir
)
sample_info$imagej_xml_path = temp[grep('xml$', temp)]
sample_info$imagej_image_path = temp[grep('png$', temp)]

sample_info = rescale_imagej_inputs(sample_info, out_dir = tempdir())

spe_input_dir = tempdir()
prep_imagej_coords(sample_info, out_dir = spe_input_dir)
prep_imagej_image(sample_info, out_dir = spe_input_dir)

########################################################################
#   Add array coordinates
########################################################################

spe_new <- add_array_coords(spe, sample_info, tempdir())

#    Many columns related to spatial coordinates were added
added_cols_regex = "^(array|pxl)_(row|col)(_in_fullres)?_(transformed|original|rounded)$"
colnames(SpatialExperiment::colData(spe_new))[
    grep(added_cols_regex, colnames(SpatialExperiment::colData(spe_new)))
]

#    array_row' and 'array_col' were overwritten with their transformed
#    values
head(spe$array_row)
head(spe$array_col)
}
\author{
Nicholas J. Eagles
}
